""Given an array arr of integers, check if there exists two integers N and M such that N is the double of M ( i.e. N = 2 * M).

More formally check if there exists two indices i and j such that :

i != j
0 <= i, j < arr.length
arr[i] == 2 * arr[j]
 

Example 1:

Input: arr = [10,2,5,3]
Output: true
Explanation: N = 10 is the double of M = 5,that is, 10 = 2 * 5.
Example 2:

Input: arr = [7,1,14,11]
Output: true
Explanation: N = 14 is the double of M = 7,that is, 14 = 2 * 7.
Example 3:

Input: arr = [3,1,7,11]
Output: false
Explanation: In this case does not exist N and M, such that N = 2 * M.""

class Solution:
    def checkIfExist(self, arr: List[int]) -> bool:
        def search(left, right, element):
            while left < right:
                mid = (right+left)//2
                if arr[mid] < element:
                    left = mid + 1
                else:
                    right = mid
            return arr[left] == element
        
        arr.sort()
        for cur_idx in range(len(arr)-1):
            if arr[cur_idx] < 0:
                if search(0, cur_idx-1, 2*arr[cur_idx]):
                    return True
            elif arr[cur_idx] >= 0:
                if search(cur_idx+1, len(arr) - 1, 2*arr[cur_idx]):
                    return True
