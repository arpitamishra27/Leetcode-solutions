""Given an array, rotate the array to the right by k steps, where k is non-negative.

 

Example 1:

Input: nums = [1,2,3,4,5,6,7], k = 3
Output: [5,6,7,1,2,3,4]
Explanation:
rotate 1 steps to the right: [7,1,2,3,4,5,6]
rotate 2 steps to the right: [6,7,1,2,3,4,5]
rotate 3 steps to the right: [5,6,7,1,2,3,4]
Example 2:

Input: nums = [-1,-100,3,99], k = 2
Output: [3,99,-1,-100]
Explanation: 
rotate 1 steps to the right: [99,-1,-100,3]
rotate 2 steps to the right: [3,99,-1,-100]""

class Solution:
    
            
    def rotate(self, nums: List[int], k: int) -> None:
            
        k= k%len(nums)
        end=len(nums)-1
        start=0
        
        def rev(nums: List[int], start: int, end: int) -> None:
            while(start<end):
                temp=nums[start]
                nums[start]=nums[end]
                nums[end]=temp
                start+=1
                end-=1
        rev(nums,start,end)
        rev(nums,start,k-1)
        rev(nums,k,end)
