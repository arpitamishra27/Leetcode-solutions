"""Given a 0-indexed integer array nums, return the number of distinct quadruplets (a, b, c, d) such that:

nums[a] + nums[b] + nums[c] == nums[d], and
a < b < c < d
 

Example 1:

Input: nums = [1,2,3,6]
Output: 1
Explanation: The only quadruplet that satisfies the requirement is (0, 1, 2, 3) because 1 + 2 + 3 == 6"""

class Solution(object):
    def countQuadruplets(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        n=len(nums) 
        res=0
        d=defaultdict(int)
        d[nums[n-1]-nums[n-2]]=1
        for i in range(n-3,0,-1):
            for j in range(i-1,-1,-1):
                res+=d[nums[i]+nums[j]]
            for k in range(n-1,i,-1):
                d[nums[k]-nums[i]]+=1
        return res
