""Given a m x n matrix grid which is sorted in non-increasing order both row-wise and column-wise, return the number of negative numbers in grid.

 

Example 1:

Input: grid = [[4,3,2,-1],[3,2,1,-1],[1,1,-1,-2],[-1,-1,-2,-3]]
Output: 8
Explanation: There are 8 negatives number in the matrix.
Example 2:

Input: grid = [[3,2],[1,0]]
Output: 0""


class Solution:
    def negative(self,grid):
        
        low=0;
        high=len(grid)-1
        
        while low<high:
            mid=(low+high)//2
            
            if grid[mid]<0:
                high=mid
            else:
                low=mid+1
        return len(grid)-high
    
    def countNegatives(self, grid: List[List[int]]) -> int:
        
        count=0
        
        for i in range(len(grid)-1,-1,-1):
            if grid[i][-1]>=0:
                break
            elif grid[i][0]<0:
                count+=len(grid[i])
            else:
                count+=self.negative(grid[i])
        return count
                
