"""You are given a string s and an integer k. You can choose any character of the string and change it to any other uppercase English character. You can perform this operation at most k times.

Return the length of the longest substring containing the same letter you can get after performing the above operations.

 

Example 1:

Input: s = "ABAB", k = 2
Output: 4
Explanation: Replace the two 'A's with two 'B's or vice versa.
Example 2:

Input: s = "AABABBA", k = 1
Output: 4
Explanation: Replace the one 'A' in the middle with 'B' and form "AABBBBA".
The substring "BBBB" has the longest repeating letters, which is 4."""

class Solution:
    def characterReplacement(self, s: str, k: int) -> int:
        count={}
        ans=0
        
        start=0
        for end in range(len(s)):
            count[s[end]]=1+count.get(s[end],0)
            
            while (end-start+1)-max(count.values())>k:
                count[s[start]]-=1
                start+=1
            
            ans=max(ans, end-start+1)
        return ans
